
## 🛠️ Kubernetes on EC2 with Spring Boot Application

This guide sets up a Kubernetes environment using **Minikube** on an **AWS EC2 instance**, builds a Java application, and deploys it using Kubernetes services.
Reference repository: [techiescamp/kubernetes-projects](https://github.com/techiescamp/kubernetes-projects)



 ✅ Step 1: Create EC2 Instance and Configure Security

* Launch an EC2 instance (Ubuntu 20.04 or 22.04 recommended)  of minimum t2.medium size
* Create and attach a **Security Group** allowing the following inbound rules:

  * **HTTP (80)**
  * **HTTPS (443)**
  * **SSH (22)**
  * **Custom TCP: 8080**
  * **Custom TCP: 30000–32767** (for Kubernetes NodePort)

### ✅ Step 2: Install Docker and Set Up Minikube

#### 📦 Install Docker


sudo apt update
sudo apt install docker.io -y


#### 📦 Install kubectl

curl -LO "https://dl.k8s.io/release/$(curl -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
chmod +x kubectl
sudo mv kubectl /usr/local/bin/
sudo usermod -aG docker $USER
newgrp docker

#### 📦 Install Minikube

curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
sudo install minikube-linux-amd64 /usr/local/bin/minikube

#### 🚀 Start Minikube

minikube start --driver=docker

#### 🔍 Verify Installation

minikube status
kubectl get nodes

#### ⚙️ Enable Ingress Controller if you want to add ingress controller otherwise left it

minikube addons enable ingress
kubectl get pods -n kube-system


### ✅ Step 3: Clone and Build Spring PetClinic Application

#### 🔽 Clone Repository

git clone https://github.com/spring-projects/spring-petclinic.git


#### ☕ Install Java 17

sudo apt install openjdk-17-jdk -y

java --version


#### 🔧 Install Maven 3.9.6

cd /opt
sudo wget https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.9.6/apache-maven-3.9.6-bin.tar.gz
sudo tar -xvzf apache-maven-3.9.6-bin.tar.gz
sudo ln -s apache-maven-3.9.6 maven


#### ⚙️ Configure Maven Environment Variables

sudo nano /etc/profile.d/maven.sh

Paste the following:

export M2_HOME=/opt/maven
export MAVEN_HOME=/opt/maven
export PATH=${MAVEN_HOME}/bin:${PATH}


Then apply:


source /etc/profile.d/maven.sh


#### 🛠️ Build the Project

cd ~/spring-petclinic
mvn clean install
mvn clean package -DskipTests



### ✅ Step 4: Follow Deployment Steps in the Repository

Follow the deployment instructions provided in:
👉 [https://github.com/techiescamp/kubernetes-projects](https://github.com/techiescamp/kubernetes-projects)

it contains these steps:

Step 1: Build the Java Application
Step 2: Build a Docker Image of the Application
Step 3: Push the image to DockerHub
Deploy Java & MySQL On Kubernetes
Step 1: Create Namespaces
Step 2: Create Secrets
Step 3: Create ConfigMap for MySQL
Step 4: Deploy MySQL Database
Step 5: Create ConfigMap for Java Application
Step 6: Deploy Java Application
Step 7: Deploy HorizontalPodAutoscaler (HPA)
Step 8: Access the Java Application
Step 9: Clean Up
### ✅ Step 5: Expose the Service

kubectl port-forward svc/name-service 8080:8080 --address=0.0.0.0 &



### 🌐 Step 6: Access the Application

Open your browser and navigate to:

http://<your-ec2-public-ip>:8080
